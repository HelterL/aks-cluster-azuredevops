trigger:
  branches:
    include:
    - main

pool: 
  vmImage: ubuntu-latest

variables: 
  rsgroup: 'tfstate'
  backServiceArm: 'DevServiceConnection' 
  storageaccount: 'storagedesafiotf' 
  containername: 'tfstate' 
  key: 'azuredevops.tfstate'

stages:
  - stage: 'Instalando_Terraform'
    jobs:
      - job: 'instalandoterraform'
        steps:
        - task: TerraformInstaller@1
          displayName: 'Install Terraform'
          inputs:
            terraformVersion: 'latest'

  - stage: 'Init_Terraform'
    dependsOn: 
      - 'Instalando_Terraform'
    jobs:
      - job: 'terraforminit'
        steps:
        - task: TerraformTaskV4@4
          displayName: 'Init Terraform'
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: '$(backServiceArm)'
            backendAzureRmResourceGroupName: '$(rsgroup)'
            backendAzureRmStorageAccountName: '$(storageaccount)'
            backendAzureRmContainerName: '$(containername)'
            backendAzureRmKey: '$(key)'
          
        - task: TerraformTaskV4@4
          displayName: 'Validando'
          inputs:
            provider: 'azurerm'
            command: 'validate'
  
        - task: TerraformTaskV4@4
          displayName: 'Terraform Plan'
          inputs:
            provider: 'azurerm'
            command: 'plan'
            backendServiceArm: '$(backServiceArm)'
            backendAzureRmResourceGroupName: '$(rsgroup)'
            backendAzureRmStorageAccountName: '$(storageaccount)'
            backendAzureRmContainerName: '$(containername)'
            backendAzureRmKey: '$(key)'         
            commandOptions: '-out=tfplan'
  
  