# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  rsgroup: 'tfstate'
  storageaccountname: 'storagedesafiotf'
  containername: 'tfstate'
  key: 'azuredevops.tfstate'

stages:
  - stage: validandotf
    
  - stage: tfdeploy
    condition: succeded('valindandotf')
    dependsOn: validandotf
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@1
            displayName: instalartf
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: 
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'DevServiceConnection'
              backendAzureRmResourceGroupName: '$(rsgroup)'
              backendAzureRmStorageAccountName: '$(storageaccountname)'
              backendAzureRmContainerName: '$(containername)'
              backendAzureRmKey: '$(key)'  
          - task: TerraformTaskV4@4
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
          - task: TerraformTaskV4@4
            displayName: Apply
            inputs:
              provider: 'azurerm'
              command: 'apply'